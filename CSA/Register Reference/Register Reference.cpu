<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="regRef.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="true" defaultValue="0" id="model.Field5cf32194">
	</Field>
	<Field name="address" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field47f79e88">
	</Field>
	<Field name="unused" type="ignored" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field1e76f60">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register5735d5ae" />
	<Register name="ac" width="16" initialValue="0" readOnly="false" id="model.module.Register107f477c" />
	<Register name="ar" width="12" initialValue="0" readOnly="false" id="model.module.Register7e34372a" />
	<Register name="counter" width="16" initialValue="0" readOnly="false" id="model.module.Register1b696819" />
	<Register name="dr" width="16" initialValue="0" readOnly="false" id="model.module.Register6288567f" />
	<Register name="ir" width="16" initialValue="0" readOnly="false" id="model.module.Register826b9f5" />
	<Register name="pc" width="12" initialValue="0" readOnly="false" id="model.module.Register57f442bc" />
	<Register name="status" width="3" initialValue="0" readOnly="false" id="model.module.Register78dd1fb" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="stop" bit="0" register="model.module.Register78dd1fb" halt="true" id="model.module.ConditionBit279654db" />

	<!--............. rams ..........................-->
	<RAM name="ram" length="4096" cellSize="16" id="model.module.RAM1ac2b8cd" />

	<!--............. set ...........................-->
	<Set name="setAC=0" register="model.module.Register107f477c" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet6f56f88b" />
	<Set name="setE=0" register="model.module.Register5735d5ae" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet6234b1b8" />

	<!--............. test ..........................-->
	<Test name="if(E==0)then_pc+1" register="model.module.Register5735d5ae" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4b0f9060" />
	<Test name="if(ac&lt;0)then_pc+1" register="model.module.Register107f477c" start="0" numBits="16" comparison="GT" value="0" omission="1" id="model.microinstruction.Test13985213" />
	<Test name="if(ac==0)then_pc+1" register="model.module.Register107f477c" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test44d9b5c4" />
	<Test name="if(ac&gt;0)then_pc+1" register="model.module.Register107f477c" start="0" numBits="16" comparison="LT" value="0" omission="1" id="model.microinstruction.Test6bdfe93" />

	<!--............. increment .....................-->
	<Increment name="ac+1" register="model.module.Register107f477c" delta="1" id="model.microinstruction.Increment2df992aa" />
	<Increment name="dr+1" register="model.module.Register6288567f" delta="1" id="model.microinstruction.Increment7c901659" />
	<Increment name="pc+1" register="model.module.Register57f442bc" delta="1" id="model.microinstruction.Increment756efb9a" />

	<!--............. shift .........................-->
	<Shift name="shiftACleft" type="cyclic" source="model.module.Register107f477c" destination="model.module.Register107f477c" direction="left" distance="1" id="model.microinstruction.Shift14e34b5f" />
	<Shift name="shiftACright" type="cyclic" source="model.module.Register107f477c" destination="model.module.Register107f477c" direction="right" distance="1" id="model.microinstruction.Shift6a93723a" />

	<!--............. logical .......................-->
	<Logical name="and(ac&amp;dr)" type="AND" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Logical164d83ef" />
	<Logical name="not(!E)" type="NOT" source1="model.module.Register5735d5ae" source2="model.module.Register5735d5ae" destination="model.module.Register5735d5ae" id="model.microinstruction.Logical1aca00f4" />
	<Logical name="not(!ac)" type="NOT" source1="model.module.Register107f477c" source2="model.module.Register107f477c" destination="model.module.Register107f477c" id="model.microinstruction.Logical147d0897" />
	<Logical name="or(ac|dr)" type="OR" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Logical6b39a335" />
	<Logical name="xor(ac^dr)" type="XOR" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Logical11911746" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="add(ac+dr)" type="ADD" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Arithmetic6d549c53" />
	<Arithmetic name="divide(ac/dr)" type="DIVIDE" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Arithmetic27d3ecad" />
	<Arithmetic name="multiply(ac*dr)" type="MULTIPLY" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Arithmetic1d5d369" />
	<Arithmetic name="sub(ac-dr)" type="SUBTRACT" source1="model.module.Register107f477c" source2="model.module.Register6288567f" destination="model.module.Register107f477c" id="model.microinstruction.Arithmetic1867cf32" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="DR[0]-&gt;AC[0]" source="model.module.Register6288567f" srcStartBit="0" dest="model.module.Register107f477c" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR69164673" />
	<TransferRtoR name="DR[0]-&gt;AC[15]" source="model.module.Register6288567f" srcStartBit="0" dest="model.module.Register107f477c" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR51987e69" />
	<TransferRtoR name="E-&gt;dr" source="model.module.Register5735d5ae" srcStartBit="0" dest="model.module.Register6288567f" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR46779ea3" />
	<TransferRtoR name="ac[0]-&gt;E" source="model.module.Register107f477c" srcStartBit="0" dest="model.module.Register5735d5ae" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR604fd700" />
	<TransferRtoR name="ac[15]-&gt;E" source="model.module.Register107f477c" srcStartBit="15" dest="model.module.Register5735d5ae" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR72b68656" />
	<TransferRtoR name="dr-&gt;ac" source="model.module.Register6288567f" srcStartBit="0" dest="model.module.Register107f477c" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR294863ad" />
	<TransferRtoR name="ir[0-11]-&gt;ar" source="model.module.Register826b9f5" srcStartBit="0" dest="model.module.Register7e34372a" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR533062a1" />
	<TransferRtoR name="pc-&gt;ar" source="model.module.Register57f442bc" srcStartBit="0" dest="model.module.Register7e34372a" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR4dd95810" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="decode" ir="model.module.Register826b9f5" id="model.microinstruction.Decodeb1bf3cb" />

	<!--............. set condition bit .............-->
	<SetCondBit name="stop" bit="model.module.ConditionBit279654db" value="1" id="model.microinstruction.SetCondBit6124bc0e" />

	<!--............. io ............................-->
	<IO name="input" direction="input" type="integer" buffer="model.module.Register107f477c" connection="[Console]" id="model.microinstruction.IO3151efe1" />
	<IO name="inputE" direction="input" type="integer" buffer="model.module.Register5735d5ae" connection="[Console]" id="model.microinstruction.IO3ec84781" />
	<IO name="output" direction="output" type="integer" buffer="model.module.Register107f477c" connection="[Console]" id="model.microinstruction.IO629e00aa" />
	<IO name="outputE" direction="output" type="integer" buffer="model.module.Register5735d5ae" connection="[Console]" id="model.microinstruction.IO3a1ee1f5" />
	<IO name="outputdr" direction="output" type="integer" buffer="model.module.Register6288567f" connection="[Console]" id="model.microinstruction.IO269e143b" />

	<!--............. memory access .................-->
	<MemoryAccess name="ac-&gt;m[ar]" direction="write" memory="model.module.RAM1ac2b8cd" data="model.module.Register107f477c" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess188ed9ee" />
	<MemoryAccess name="dr-&gt;m[ar]" direction="write" memory="model.module.RAM1ac2b8cd" data="model.module.Register6288567f" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess57ce75dc" />
	<MemoryAccess name="m[ar]-&gt;ac" direction="read" memory="model.module.RAM1ac2b8cd" data="model.module.Register107f477c" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess4547a4df" />
	<MemoryAccess name="m[ar]-&gt;dr" direction="read" memory="model.module.RAM1ac2b8cd" data="model.module.Register6288567f" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess13ae4f80" />
	<MemoryAccess name="m[ar]-&gt;ir" direction="read" memory="model.module.RAM1ac2b8cd" data="model.module.Register826b9f5" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess7d81a5b2" />
	<MemoryAccess name="m[ar]-&gt;pc" direction="read" memory="model.module.RAM1ac2b8cd" data="model.module.Register57f442bc" address="model.module.Register7e34372a" id="model.microinstruction.MemoryAccess59455f4b" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End21dc79e0" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR4dd95810" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7d81a5b2" />
		<Microinstruction microRef="model.microinstruction.Increment756efb9a" />
		<Microinstruction microRef="model.microinstruction.Decodeb1bf3cb" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="sze" opcode="f" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#fbdfb3 #b3cad4" assemblyColors="#fbdfb3" >
		<Microinstruction microRef="model.microinstruction.Test4b0f9060" />
		<Microinstruction microRef="model.microinstruction.Increment756efb9a" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="sza" opcode="e" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#ecf8a1 #d5fad9" assemblyColors="#ecf8a1" >
		<Microinstruction microRef="model.microinstruction.Test44d9b5c4" />
		<Microinstruction microRef="model.microinstruction.Increment756efb9a" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="sna" opcode="c" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#849ec2 #e7b2c2" assemblyColors="#849ec2" >
		<Microinstruction microRef="model.microinstruction.Test13985213" />
		<Microinstruction microRef="model.microinstruction.Increment756efb9a" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="spa" opcode="b" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#b7c1d8 #e2bb9b" assemblyColors="#b7c1d8" >
		<Microinstruction microRef="model.microinstruction.Test6bdfe93" />
		<Microinstruction microRef="model.microinstruction.Increment756efb9a" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="writeE" opcode="9" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#df92fd #9abfe1" assemblyColors="#df92fd" >
		<Microinstruction microRef="model.microinstruction.IO3a1ee1f5" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="clE" opcode="7" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#8889e2 #e89afe" assemblyColors="#8889e2" >
		<Microinstruction microRef="model.microinstruction.CpusimSet6234b1b8" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="readE" opcode="6" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#95b1e4 #f2d8ee" assemblyColors="#95b1e4" >
		<Microinstruction microRef="model.microinstruction.IO3ec84781" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="cmE" opcode="5" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#91ca93 #f3a891" assemblyColors="#91ca93" >
		<Microinstruction microRef="model.microinstruction.Logical1aca00f4" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="cil" opcode="4" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#afccea #84e298" assemblyColors="#afccea" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR46779ea3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR72b68656" />
		<Microinstruction microRef="model.microinstruction.Shift14e34b5f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR69164673" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="cir" opcode="2" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#defeb4 #83aedd" assemblyColors="#defeb4" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR46779ea3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR604fd700" />
		<Microinstruction microRef="model.microinstruction.Shift6a93723a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR51987e69" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="incAC" opcode="1" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#9decdd #a3f3fd" assemblyColors="#9decdd" >
		<Microinstruction microRef="model.microinstruction.Increment2df992aa" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="cma" opcode="0" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#c182c1 #f7cd9c" assemblyColors="#c182c1" >
		<Microinstruction microRef="model.microinstruction.Logical147d0897" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="cla" opcode="3" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#9086e2 #dcbdea" assemblyColors="#9086e2" >
		<Microinstruction microRef="model.microinstruction.CpusimSet6f56f88b" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="read" opcode="d" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#96b5ae #c9dce2" assemblyColors="#96b5ae" >
		<Microinstruction microRef="model.microinstruction.IO3151efe1" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="write" opcode="8" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#fcc3d6 #919eae" assemblyColors="#fcc3d6" >
		<Microinstruction microRef="model.microinstruction.IO629e00aa" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="a" instructionFormat="opcode unused" assemblyFormat="opcode" instructionColors="#fabcb8 #e4898e" assemblyColors="#fabcb8" >
		<Microinstruction microRef="model.microinstruction.SetCondBit6124bc0e" />
		<Microinstruction microRef="model.microinstruction.End21dc79e0" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM1ac2b8cd" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
